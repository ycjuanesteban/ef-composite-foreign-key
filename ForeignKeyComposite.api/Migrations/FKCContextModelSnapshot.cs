// <auto-generated />
using ForeignKeyComposite.api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ForeignKeyComposite.api.Migrations
{
    [DbContext(typeof(FKCContext))]
    partial class FKCContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ForeignKeyComposite.api.Domain.Entity01", b =>
                {
                    b.Property<int>("Key01")
                        .HasColumnType("int");

                    b.Property<int>("Key02")
                        .HasColumnType("int");

                    b.HasKey("Key01", "Key02");

                    b.ToTable("Entity01");
                });

            modelBuilder.Entity("ForeignKeyComposite.api.Domain.Entity02", b =>
                {
                    b.Property<int>("Key01")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Key01"));

                    b.Property<int>("Foreign02")
                        .HasColumnType("int");

                    b.Property<int>("Foreign01")
                        .HasColumnType("int");

                    b.Property<string>("OtherProperty")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key01", "Foreign02", "Foreign01");

                    b.HasIndex("Foreign01", "Foreign02");

                    b.ToTable("Entity02");
                });

            modelBuilder.Entity("ForeignKeyComposite.api.Domain.Entity02", b =>
                {
                    b.HasOne("ForeignKeyComposite.api.Domain.Entity01", "Entity01")
                        .WithMany("Entities02")
                        .HasForeignKey("Foreign01", "Foreign02")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity01");
                });

            modelBuilder.Entity("ForeignKeyComposite.api.Domain.Entity01", b =>
                {
                    b.Navigation("Entities02");
                });
#pragma warning restore 612, 618
        }
    }
}
